//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36366
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPartsTCE.Exemplo {
    using System.Web.UI.WebControls.Expressions;
    using System.Web.UI.HtmlControls;
    using System.Collections;
    using System.Text;
    using System.Web.UI;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml.Linq;
    using Microsoft.SharePoint.WebPartPages;
    using System.Web.SessionState;
    using System.Configuration;
    using Microsoft.SharePoint;
    using System.Web;
    using System.Web.DynamicData;
    using System.Web.Caching;
    using System.Web.Profile;
    using System.ComponentModel.DataAnnotations;
    using System.Web.UI.WebControls;
    using System.Web.Security;
    using System;
    using Microsoft.SharePoint.Utilities;
    using System.Text.RegularExpressions;
    using System.Collections.Specialized;
    using System.Web.UI.WebControls.WebParts;
    using Microsoft.SharePoint.WebControls;
    using System.CodeDom.Compiler;
    
    
    public partial class Exemplo {
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected global::System.Web.UI.WebControls.Label Label1;
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebPartCodeGenerator", "12.0.0.0")]
        public static implicit operator global::System.Web.UI.TemplateControl(Exemplo target) 
        {
            return target == null ? null : target.TemplateControl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private global::System.Web.UI.WebControls.Label @__BuildControlLabel1() {
            global::System.Web.UI.WebControls.Label @__ctrl;
            @__ctrl = new global::System.Web.UI.WebControls.Label();
            this.Label1 = @__ctrl;
            @__ctrl.ApplyStyleSheetSkin(this.Page);
            @__ctrl.ID = "Label1";
            @__ctrl.Text = "";
            return @__ctrl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void @__BuildControlTree(global::WebPartsTCE.Exemplo.Exemplo @__ctrl) {
            System.Web.UI.IParserAccessor @__parser = ((System.Web.UI.IParserAccessor)(@__ctrl));
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl("\r\n\r\n  <script type=\"text/javascript\" src=\"_layouts/15/sp.runtime.js\"></script>\r\n " +
                        " <script type=\"text/javascript\" src=\"_layouts/15/sp.js\"></script>\r\n\r\n  <script t" +
                        "ype=\"text/javascript\">\r\n  \r\n   //var collListItem; \r\n   //function retrieveListI" +
                        "tems() { \r\n   //   var context = new SP.ClientContext();\r\n   //   var site = con" +
                        "text.get_site();\r\n   //   var list = context.get_web().get_lists().getByTitle(\'S" +
                        "lides\');      \r\n   //   var camlQuery = new SP.CamlQuery();\r\n   //   camlQuery.s" +
                        "et_viewXml(\'<View><RowLimit>8</RowLimit></View>\');\r\n   //   this.collListItem = " +
                        "list.getItems(camlQuery);\r\n   //   context.load(collListItem);\r\n   //   context." +
                        "executeQueryAsync(Function.createDelegate(this, this.onQuerySucceeded), Function" +
                        ".createDelegate(this, this.onQueryFailed));        \r\n   // }\r\n    \r\n   // functi" +
                        "on onQuerySucceeded(sender, args) {\r\n    \r\n   //     var listItemInfo = \'\';\r\n   " +
                        "//     var listItemEnumerator = this.collListItem.getEnumerator();\r\n   //     wh" +
                        "ile (listItemEnumerator.moveNext()) {\r\n   //         var oListItem = listItemEnu" +
                        "merator.get_current();\r\n   //         //alert(TemplateFiqueAtento(oListItem));\r\n" +
                        "   //         alert(oListItem.get_item(\'FileRef\'));\r\n   //         listItemInfo " +
                        "+= \'<img src=\"\' + oListItem.get_item(\'FileRef\') + \'\" style=\"width:100%; height=2" +
                        "0%\" alt=\"\" >\';\r\n   //     }\r\n   //     //alert(listItemInfo.toString());\r\n   // " +
                        "    $(\'#slides\').html(listItemInfo.toString());\r\n   //     $(\"#slides\").slidesjs" +
                        "({\r\n   //          width: 840,\r\n   //          height: 228,\r\n   //          navi" +
                        "gation: {\r\n   // \t\t      active: true,\r\n   // \t\t      effect: \"slide\"\r\n   // \t\t " +
                        "       // [string] Can be either \"slide\" or \"fade\".\r\n   // \t\t    },\r\n   // \t\t  p" +
                        "agination: {\r\n   // \t\t      active: false,\r\n   // \t\t        // [boolean] Create " +
                        "pagination items.\r\n   // \t\t        // You cannot use your own pagination. Sorry." +
                        "\r\n   // \t\t      effect: \"slide\"\r\n   // \t\t        // [string] Can be either \"slid" +
                        "e\" or \"fade\".\r\n   // \t\t    }\r\n   //        \t      });\r\n   // }\r\n\r\n   // function" +
                        " onQueryFailed(sender, args) {\r\n   //     alert(\'Request failed. \' + args.get_me" +
                        "ssage() + \'\\n\' + args.get_stackTrace());\r\n   // }\r\n\r\n  \r\n   // $(function(){\r\n  " +
                        " //   retrieveListItems() ;\r\n   // });\r\n    \r\n    \r\n  </script>\r\n\r\n\r\n"));
            global::System.Web.UI.WebControls.Label @__ctrl1;
            @__ctrl1 = this.@__BuildControlLabel1();
            @__parser.AddParsedSubObject(@__ctrl1);
        }
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void InitializeControl() {
            this.@__BuildControlTree(this);
            this.Load += new global::System.EventHandler(this.Page_Load);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual object Eval(string expression) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual string Eval(string expression, string format) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression, format);
        }
    }
}
